# configuration file for git-cliff v0.9.2
# See https://github.com/orhun/git-cliff#configuration-file


# contains the configuration options for changelog generation
[changelog]
    header = """# Changelog

All notable changes to this project will be documented in this file.

Loosely based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).
Commit messages should follow the [Conventional Commits Specification](https://www.conventionalcommits.org/en/v1.0.0/#summary).\n
"""


    # see https://tera.netlify.app/docs/#introduction
    body = """
{% if version %}\
    ## \\[{{ version | trim_start_matches(pat="v") }}\\] - {{timestamp | date(format="%Y-%m-%d")}}
{% else %}\
    ## \\[unreleased\\]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}[**BREAKING**] {% endif %}{{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""

    trim = true # remove trailing whitespace

    # append to the changelog file
    footer = """
Automatically generated by [git-cliff](https://www.github.com/orhun/git-cliff).
"""

# contains the parsing and git related configuration options.
[git]
    conventional_commits  = true  # parse according to conv. commits specification
    filter_unconventional = true  # exclude commits that do not follow specification
    split_commits         = false # don't process lines individually

    # manipulate commit messages
    commit_preprocessors = [
        # multiple to single space
        { pattern = " +", replace = " " },
        # remove trailing punctuation
        { pattern = "[.,;:]$", replace = "" },
        # replace issue num with link
        { pattern = "\\(#([0-9]+)\\)", replace = "([#${1}](https://github.com/sRavioli/L31/issues/${1}))" },
        # replace issue link with number
        { pattern = "https://github.com/[^ ]/issues/([0-9]+)", replace = "[Issue #${1}]" },
        # hyperlink commits with short commits hash
        { pattern = "https://github.com/sRavioli/L31/commit/([a-f0-9]{7})[a-f0-9]*", replace = "commit # [${1}](${0})" },
        # hyperlink bare commit hashes with short commit hash
        { pattern = "([ \\n])(([a-f0-9]{7})[a-f0-9]*)", replace = "${1}commit # [${3}](https://github.com/sRavioli/L31/commit/${2})" },
    ]

    # commit parsers for determining the commit groups by using regex
    commit_parsers = [
        # some commits to skip // place before the other parsers
        { message = "^.*(fix|feat|.*)\\((linter|lint|init|move|rename|auto|.*)\\): (:tada:|:rotating_light:|:truck:|:robot:)", skip = true },

        { message = "^feat", group = "Features" },
        { message = "^fix", group = "Bug Fixes" },
        { message = "^docs", group = "Documentation" },
        { message = "^perf", group = "Performance" },
        { message = "^refactor", group = "Refactor" },
        { message = "^style", group = "Styling" },
        { message = "^test", group = "Testing" },
        { message = "^chore\\(release\\): prepare for", skip = true },
        { message = "^chore", group = "Miscellaneous Tasks" },
        { body = ".*security", group = "Security" },
        { message = ".*deprecated", body = ".*deprecated", group = "Deprecation" },
        { message = "^revert", skip = true },
    ]
    filter_commits = true # exclude commits not matching the commit parsers
    ignore_tags = "" # ignore but include ignored commits into the next tag
    protect_breaking_commits = true # disallow breaking commits to be skipped
    skip_tags = "v0.1.0-beta.1" # regex for skip processing the matched tags
    tag_pattern = "v[0-9]*" # glob pattern for matching tags
    # date_order = true # process tags in chronological order
    sort_commits = "newest" # sort commits inside sections by newest

    # link parsers to extract external refs and turn them into URLs w/ using regex
    # link_parsers = []

    # limit_commits = 10 # limit the number of commits included in the changelog
